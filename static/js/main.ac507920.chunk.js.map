{"version":3,"sources":["images/logo.png","components/Nav.js","components/CartCounter.js","components/Home.js","components/Cart.js","components/ShopItems.js","images/golden-gate.jpg","images/brooklyn-bridge.jpg","images/broken-bridge.jpg","images/little-manatee-river.jpg","images/tower-bridge.jpg","images/old-bridge-on-canal.jpg","images/mackinaw-bridge.jpg","images/covered-bridge.jpg","components/Shop.js","components/ItemDetail.js","components/Checkout.js","App.js","index.js"],"names":["Nav","props","totalQuantity","shoppingCart","icon","faShoppingCart","className","to","src","logo","alt","pathname","state","number","itemDetails","name","images","id","price","description","CartCounter","cartContents","JSON","parse","localStorage","getItem","numberOfItems","map","cartItem","parseInt","quantity","Home","Cart","location","useLocation","useState","setCartContents","cartEmpty","setCartEmpty","useEffect","proposedCart","newCartItem","console","log","newQuantity","i","length","updateQuantityForDuplicates","newArray","Set","checkUniqueness","concat","newItemId","matchingItem","find","element","filter","deleteOldItem","displayNewQuantity","setItem","stringify","calculatePrice","basePrice","baseQuantity","toFixed","formattedPrice","rawPrice","parseFloat","toString","replace","changeQuantity","identifyElement","indexOfElement","indexOf","proposedCartItem","left","slice","right","onHandleChange","event","preventDefault","target","value","getAttribute","deleteItem","increaseQuantity","decreaseQuantity","onClick","onFocus","e","onChange","total","totalCost","ShopItems","item","Shop","items","ItemDetail","match","setItemDetails","displayItems","setDisplayItems","setQuantity","displayedItem","params","newItem","shopDetail","itemValue","Checkout","title","width","height","frameBorder","allow","allowFullScreen","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac507920.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3a579eb6.png\";","import React from 'react';\nimport '../styles/nav.css';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\nimport logo from '../images/logo.png';\n\nfunction Nav(props) {\n\n  const {totalQuantity} = props;\n  const itemDetails = {name: '', images: '', id: '', price: '', description: '',};\n  const quantity = 0;\n  const shoppingCart = <FontAwesomeIcon icon = {faShoppingCart} />\n\n  return (\n    <nav>\n      <ul className = 'nav-links'>\n        <Link to = '/'>\n          <li className = 'logo'><img src = {logo} alt = 'bridge logo'></img></li>\n        </Link>\n\n        <Link to = '/shop'>\n          <li className = 'shop'>Shop</li>\n        </Link>\n\n        <Link to = {{\n          pathname: '/cart',\n          state: {\n            number: quantity,\n            itemDetails: itemDetails,\n          }\n        }}>\n          <li className = 'cart'>{shoppingCart}\n            <span className = 'item-count'>{totalQuantity}</span>\n          </li>\n        </Link>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;","import React from 'react';\nimport '../styles/home.css';\nimport Nav from './Nav';\n\nconst CartCounter = () => {\n\n  // TODO: shop/cart/ = cart/\n\n  // retrieves saved cart from local storage\n\n  const cartContents = (\n    JSON.parse(localStorage.getItem('mySavedCart')) || []\n  );\n\n  // determines number of items currently in cart\n\n  const numberOfItems = (cartContents) => {\n    let numberOfItems = 0;\n    cartContents.map((cartItem => (\n      numberOfItems = parseInt(numberOfItems) + parseInt(cartItem.quantity)\n    )));\n    return numberOfItems;\n  }\n\n  return (\n    <div>\n      <Nav totalQuantity = {numberOfItems(cartContents)}/>\n    </div>\n  )\n}\n\nexport default CartCounter;","import React from 'react';\nimport '../styles/home.css';\nimport { Link } from 'react-router-dom';\nimport CartCounter from './CartCounter';\n\nconst Home = () => {\n\n  return (\n    <div>\n      <CartCounter/>\n      <div className = 'background'>\n        <h1>George C. Parker's \n          <br/>\n          Quality Bridges\n        </h1>\n        <h3 className = 'tagline'>\"Every path in life has a bridge ...\"</h3>\n        <Link to = {`/shop`}>\n          <button className = 'shop'>\n            Shop Now\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\n  export default Home;","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport '../styles/cart.css';\nimport { Link } from 'react-router-dom';\nimport Nav from './Nav';\n\nfunction Cart() {\n\n  const location = useLocation();\n  const [cartContents, setCartContents] = useState(\n    JSON.parse(localStorage.getItem('mySavedCart')) || []\n  );\n  const [cartEmpty, setCartEmpty] = useState(true);\n\n  // if the new item is the same as item in the cart then add quantities\n\n  const updateQuantityForDuplicates = (newCartItem) => {\n\n    for(let i = 0; i < cartContents.length; i++) {\n      if(newCartItem.id === cartContents[i].id) {\n        return parseInt(newCartItem.quantity) + parseInt(cartContents[i].quantity);\n      } \n    }\n  }\n\n  // checks new cart item to see if the item currently exists in the cart\n\n  const checkUniqueness = (proposedCart) => {\n    const newArray = [...new Set(proposedCart.map(cartItem => cartItem.id))];\n    return [...newArray].length === proposedCart.length;\n  }\n\n  // creates duplicate item with the quantity sum to be added to the cart\n\n  const displayNewQuantity = (matchingItem, newQuantity) => {\n    const newUpdateQuantity = ({\n      quantity: newQuantity, \n      name: matchingItem.name, \n      price: matchingItem.price,\n      id: matchingItem.id,\n      images: matchingItem.images,\n    });\n    return newUpdateQuantity;\n  }\n\n  // removes item with old quantity from the cart\n\n  const deleteOldItem = (newItemId) => {\n    setCartContents(cartContents => cartContents.filter(cartItem => cartItem.id !== newItemId));\n  }\n\n  // when item is added to cart, the hook will decide what to do with the item\n\n  useEffect(() => {\n    let proposedCart = [];\n    const newCartItem = {\n      quantity: location.state.number, \n      name: location.state.itemDetails.name, \n      price: location.state.itemDetails.price,\n      id: location.state.itemDetails.id,\n      images: location.state.itemDetails.images,\n    };\n    if (location.state.itemDetails.name === '') {\n      console.log('no item');\n    } else {\n      let newQuantity = updateQuantityForDuplicates(newCartItem);\n      proposedCart = cartContents.concat(newCartItem);\n\n      // addition to cart is based upon whether the item currently exists in the cart\n      // quantity of items will be added if item already exists in cart \n      // and old items will be deleted\n\n      let uniqueItem = checkUniqueness(proposedCart);\n      if(uniqueItem) {\n        setCartContents(proposedCart);\n      } else {\n        let newItemId = location.state.itemDetails.id;\n        let matchingItem = cartContents.find((element) => {\n          return (element.id === newItemId);\n        })\n        deleteOldItem(newItemId);\n        setCartContents(cartContents => cartContents.concat(displayNewQuantity(matchingItem, newQuantity)));\n      }\n    }\n  },[])\n\n  // determines whether cart is empty or contains item\n\n  useEffect(() => {\n    if (cartContents.length > 0) {\n      setCartEmpty(false);\n    }\n  }, [cartContents])\n\n  // places cart contents in local storage\n\n  useEffect(() => {\n    localStorage.setItem('mySavedCart', JSON.stringify(cartContents));\n  }, [cartContents])\n\n  // calculates price of item using price times quantity\n\n  const calculatePrice = (basePrice, baseQuantity) => {\n    const price1 = basePrice * baseQuantity;\n    const price = price1.toFixed(2);\n    return price;\n  }\n\n  // adds comas every three digits to longer numbers \n\n  const formattedPrice = (rawPrice) => {\n    let price = parseFloat(rawPrice);\n    price = price.toFixed(2);\n    return price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  // adds item prices for total cost\n\n  const totalCost = (cartContents) => {\n    let total = 0;\n    cartContents.map((cartItem => (\n      total = parseFloat(calculatePrice(cartItem.price, cartItem.quantity)) + parseFloat(total)\n    )));\n    let grandTotal = formattedPrice(total);\n    return grandTotal;\n  }\n\n  // changes quantity in cart maintaining order of cart items\n\n  const changeQuantity = (newQuantity, newItemId) => {\n    let matchingItem = cartContents.find((element) => {\n      return (element.id === parseInt(newItemId))\n    })\n    let identifyElement = cartContents.find((element) => {\n      return (element.id === parseInt(newItemId))\n    })\n    let indexOfElement = cartContents.indexOf(identifyElement);\n  \n    const proposedCartItem = ({\n      quantity: newQuantity, \n      name: matchingItem.name, \n      price: matchingItem.price,\n      id: matchingItem.id,\n      images: matchingItem.images,\n    });\n\n    setCartContents(cartContents => cartContents.filter(cartItem => cartItem.id !== newItemId));\n    const left = cartContents.slice(0, indexOfElement);\n    const right = cartContents.slice(indexOfElement + 1);\n    setCartContents(left.concat(proposedCartItem, right));\n  }\n\n  // updates number of items when a new quantity is typed in\n\n  const onHandleChange = (event) => {\n    event.preventDefault();  \n    let newQuantity = parseInt(event.target.value);\n    if (newQuantity < 0) {\n      newQuantity = 0;\n    }\n    let newItemId = event.target.getAttribute('id');\n    if (newQuantity === 0) {\n      deleteItem(event);\n    } else {\n      changeQuantity(newQuantity, newItemId);\n    };\n  }\n\n  // handles quantity increase when plus button is selected\n\n  const increaseQuantity = (event) => {\n    event.preventDefault();  \n    let newQuantity = parseInt(event.target.value) + 1;\n    let newItemId = event.target.getAttribute('id');\n    changeQuantity(newQuantity, newItemId);\n  }\n\n  // handles quantity decrease when minus button is selected\n\n  const decreaseQuantity = (event) => {\n    event.preventDefault();  \n    let newQuantity = parseInt(event.target.value);\n    if (newQuantity > 0) {\n      newQuantity--;\n    } else {\n      newQuantity = 0;\n    }\n    let newItemId = event.target.getAttribute('id');\n    changeQuantity(newQuantity, newItemId);\n  }\n\n  // displays total number of items for cart counter\n\n  const numberOfItems = (cartContents) => {\n    let numberOfItems = 0;\n    cartContents.map((cartItem => (\n      numberOfItems = parseInt(numberOfItems) + parseInt(cartItem.quantity)\n    )));\n    return numberOfItems;\n  }\n\n  const deleteItem = (event) => {\n    let newItemId = event.target.getAttribute('id');\n    let identifyElement = cartContents.find((element) => {\n      return (element.id === parseInt(newItemId))\n    })\n    let indexOfElement = cartContents.indexOf(identifyElement);\n    setCartContents(cartContents => cartContents.filter(cartItem => cartItem.id !== newItemId));\n    const left = cartContents.slice(0, indexOfElement);\n    const right = cartContents.slice(indexOfElement + 1);\n    setCartContents(left.concat(right));\n  }\n\n  return (\n    <div className = 'cart-contents'>\n      <Nav totalQuantity = {numberOfItems(cartContents)}/>\n      <h2 className = 'cart-title'>Cart</h2>\n      {cartEmpty\n        ? <div>\n        <li>Your Cart is Empty</li>\n        </div>\n        : <div>      \n      <h3 className = 'row' id = 'categories'>\n        <div className = 'column'> </div>\n        <div className = 'column'>Item</div>\n        <div className = 'column'>Price</div>\n        <div className = 'column'>Quantity</div>\n        <div className = 'column'>Total Price</div>\n      </h3>\n      {cartContents.map(((cartItem) => (\n        <h3 className = 'row' id = 'contents' key = {cartItem.id}>\n          <div className = 'column'><img src = {cartItem.images} alt = {cartItem.name} className = 'cart-item'></img></div>\n          <div className = 'column'>{cartItem.name}</div>\n          <div className = 'column'>${formattedPrice(cartItem.price)}</div> \n          <div className = 'column'>\n            <button\n              className = 'decrease'     \n              value = {cartItem.quantity}\n              id = {cartItem.id} \n              onClick = {decreaseQuantity}>-</button>\n            <input  \n              value = {cartItem.quantity}\n              id = {cartItem.id}\n              onFocus = {(e) => e.target.value = ''} \n              onChange = {onHandleChange}>\n            </input>\n            <button \n              className = 'increase' \n              value = {cartItem.quantity}\n              id = {cartItem.id}\n              onClick = {increaseQuantity}>+</button>\n            <button\n              className = 'delete'\n              value = {cartItem.id}\n              id = {cartItem.id}\n              onClick = {deleteItem}>delete</button>\n          </div>\n          <div className = 'column'>${formattedPrice(calculatePrice(cartItem.price, cartItem.quantity))}</div>\n        </h3>\n      )))}\n      <h3 className = 'total'>Total = ${totalCost(cartContents)}</h3>\n        </div>\n      }\n\n      <Link to = '/shop'>\n        <button className = 'go-to-store'>\n        Keep Shopping\n        </button>\n      </Link>\n      <Link to = '/checkout'>\n        <button className = 'checkout'>\n        Checkout\n        </button>\n      </Link> \n    </div>\n  );\n}\n\nexport default Cart;","import goldenGate from  '../images/golden-gate.jpg';\nimport brooklynBridge from '../images/brooklyn-bridge.jpg';\nimport brokenBridge from  '../images/broken-bridge.jpg';\nimport littleManatee from '../images/little-manatee-river.jpg';\nimport towerBridge from  '../images/tower-bridge.jpg';\nimport oldBridge from '../images/old-bridge-on-canal.jpg';\nimport mackinawBridge from  '../images/mackinaw-bridge.jpg';\nimport coveredBridge from '../images/covered-bridge.jpg';\n\nconst ShopItems = {\n    item: [\n      {name: 'Golden Gate Bridge', \n      images: goldenGate, \n      id: 5483, \n      price: '35000000',\n      description: 'The Golden Gate Bridge is a suspension bridge 1.7 miles long and 746 feet high. It was constructed from 1933-1937. In a beautiful shade of red, it is said to be one of the most photographed bridges.'\n    },\n\n      {name: 'Brooklyn Bridge',\n      images: brooklynBridge,\n      id: 8675,\n      price: '15000000',\n      description: 'The Brooklyn Bridge is a suspension bridge 1.1 miles long in the heart of New York City. It is 137 years old and was the longest suspension bridge in the world at the time of its construction.'\n    },\n\n      {name: 'Basic Bridge',\n      images: brokenBridge,\n      id: 5309,\n      price: '57.39',\n      description: 'Connect land over small streams with a basic bridge. This is one of our newer bridge at 25 years old. The need for updating is reflected in the low price.',\n    },\n\n    {name: 'Little Manatee River Bridge', \n    images: littleManatee, \n    id: 3290, \n    price: '230000',\n    description: 'This is a Warren-type simple truss bridge. With a little TLC you can transport your train over a river in style.',\n  },\n\n    {name: 'Tower Bridge',\n    images: towerBridge,\n    id: 2130,\n    price: '1644558.20',\n    description: 'This bridge has been in operation since 1886. This combined bascule and suspension bridge is sure to get you noticed.',\n  },\n\n    {name: 'Old Canal Bridge',\n    images: oldBridge,\n    id: 1256,\n    price: '9999.99',\n    description: 'Has your homeowner\\'s association erected a canal through your yard? This is the perfect solution to get to the other side.',\n    },\n\n    {name: 'Mackinac Bridge',\n    images: mackinawBridge,\n    id: 4321,\n    price: '100000000',\n    description: 'Own your own 5-mile long suspension bridge. Imagine the pride in knowing your bridge is the only thing connecting Michigan\\'s two penninsulas.',\n    },\n\n    {name: 'Covered Bridge',\n    images: coveredBridge,\n    id: 1001,\n    price: '5000',\n    description: 'Cross a river in style with this old-fashioned covered bridge. You will not need to worry about getting wet while crossing this bridge in a storm.',\n    },\n\n    ]\n  }\n\n  export default ShopItems;","export default __webpack_public_path__ + \"static/media/golden-gate.16a4425c.jpg\";","export default __webpack_public_path__ + \"static/media/brooklyn-bridge.cbcf8baa.jpg\";","export default __webpack_public_path__ + \"static/media/broken-bridge.5921557e.jpg\";","export default __webpack_public_path__ + \"static/media/little-manatee-river.44d8aacc.jpg\";","export default __webpack_public_path__ + \"static/media/tower-bridge.18735b99.jpg\";","export default __webpack_public_path__ + \"static/media/old-bridge-on-canal.5dca8f72.jpg\";","export default __webpack_public_path__ + \"static/media/mackinaw-bridge.9ae501c7.jpg\";","export default __webpack_public_path__ + \"static/media/covered-bridge.0c40cfb2.jpg\";","import React from 'react';\nimport '../styles/shop.css';\nimport { Link } from 'react-router-dom';\nimport ShopItems from './ShopItems';\nimport CartCounter from './CartCounter';\n\n\nfunction Shop() {\n\n  const items = ShopItems;\n\n  // adds comas to numbers over 1,000\n\n  function formattedPrice(rawPrice) {\n    return rawPrice.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  function importedImage(itemImage) {\n    let imageName = itemImage;\n    console.log(imageName);\n    return imageName;\n  }\n\n  return (\n    <div className = 'content'>\n      <CartCounter/>\n      <h2 className = 'shop-heading'>Would you like to buy a bridge?</h2>\n      <div className = 'row' id = 'shop'>\n        {items.item.map((item => ( \n          <div className = 'column' key = {item.id}>\n            {console.log(item.images)}\n            <Link to = {`/shop/${item.id}`}>\n              <img src = {item.images} alt = {item.name} className = 'item'></img>\n            </Link>\n            <h3>{item.name}</h3>\n            <h3>${formattedPrice(item.price)}</h3>\n          </div>\n        )))}\n      </div>\n    </div>\n  );\n}\n\nexport default Shop;","import React, { useState, useEffect } from 'react';\nimport '../styles/item-detail.css';\nimport ShopItems from './ShopItems';\nimport { Link } from 'react-router-dom';\nimport CartCounter from './CartCounter';\n\nfunction ItemDetail({ match }) {\n\n  const [itemDetails, setItemDetails] = useState({\n    name: '', \n    images: '', \n    id: '', \n    price: '', \n    description: '',\n  });\n  const [displayItems, setDisplayItems] = useState(false);\n  const [quantity, setQuantity] = useState(1);\n\n  // display matching item when component mounts\n\n  useEffect(() => {\n    const displayedItem = parseInt(match.params.id);\n    const matchingItem = [ShopItems];\n    const shopDetail = matchingItem[0].item;\n    const newItem = shopDetail.filter((shopDetail, i) => shopDetail.id === displayedItem);\n    setItemDetails(newItem[0]);\n    setDisplayItems(true);\n  },[])\n\n  // displays number of items upon typing a number\n\n  const onHandleChange = (event) => {\n    event.preventDefault();  \n    const itemValue = parseInt(event.target.value);\n    if (itemValue > 0) {\n      setQuantity(itemValue)\n    } else {\n      setQuantity(0)\n    }\n  }\n\n  // increases quantity of items when + button selected\n\n  const increaseQuantity = (event) => {\n    event.preventDefault();\n    setQuantity(parseInt(quantity) + 1);\n  }\n\n  // decreases quantity of items when - button selected\n\n  const decreaseQuantity = (event) => {\n    event.preventDefault();\n    if (quantity > 0) {\n      setQuantity(parseInt(quantity) - 1);\n    }\n  }\n\n  // adds comas to numbers over 1,000\n\n  const formattedPrice = (rawPrice) => {\n    return rawPrice.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  return (\n  <div className = 'item-selection'>\n    <CartCounter/>\n    {displayItems \n    ? <div className = 'column'>\n        <div><img className = 'item-detail' src = {itemDetails.images} alt = {itemDetails.name}></img></div>\n        <h2>{itemDetails.name}</h2>\n        <h3 className = 'description'>{itemDetails.description}</h3>\n        <h2>${formattedPrice(itemDetails.price)}</h2>\n      \n        <div>\n          <button id = 'decrease' onClick = {decreaseQuantity}>-</button>\n          <input id = 'quantity' value = {quantity} onChange = {onHandleChange}></input>\n          <button id = 'increase' onClick = {increaseQuantity}>+</button>\n\n          <Link to = {{\n            pathname: `/cart`,\n            state: {\n              number: quantity,\n              itemDetails: itemDetails,\n            }\n          }}>\n          <button id = 'add-to-cart'>Add to Cart</button>\n          </Link>\n        </div>\n      </div>\n    : null}\n  </div>\n  );\n}\n\nexport default ItemDetail;","import React from 'react';\nimport '../styles/checkout.css';\nimport CartCounter from './CartCounter';\n\nfunction Checkout() {\n\n  return(\n    <div>\n      <CartCounter/>\n      <h2 className = 'checkout'>Checkout</h2>\n      <h3 className = 'checkout'>Don't be scammed! You can not buy a bridge on the Internet!</h3>\n      <h4 className = 'checkout'>George C. Parker was born in New York City in 1860. \n          He is best known for selling local landmarks to immigrants.\n          Mr. Parker sold the Brooklyn Bridge multiple times. As a result,\n          the police removed several buyers from the bridge when they tried to erect toll booths. \n          He eventually died in Sing-Sing prison in 1936.</h4>\n      <iframe \n        title = 'The Man Who Sold New York song' \n        width = '400'\n        height = '240'\n        src = 'https://www.youtube.com/embed/U_pC5mXKVF8' \n        frameBorder = '0' \n        allow = 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' \n        allowFullScreen\n        ></iframe>\n    </div>\n  )  \n}\n\nexport default Checkout;","import React from 'react';\nimport './styles/App.css';\nimport Home from './components/Home';\nimport Nav from './components/Nav';\nimport Cart from './components/Cart';\nimport Shop from './components/Shop';\nimport ItemDetail from './components/ItemDetail';\nimport Checkout from './components/Checkout';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className = 'App'>\n        <div className = 'navbar'>\n          <Nav/>\n        </div>\n        <div className = 'content'>\n          <Switch>\n            <Route path = '/shopping-cart/' exact component = {Home} />\n            <Route path = '/shopping-cart/cart' component = {Cart}/>\n            <Route path = '/shopping-cart/shop' exact component = {Shop}/>\n            <Route path = '/shopping-cart/shop/:id' exact component = {ItemDetail}/>\n            <Route path = '/shopping-cart/checkout' component = {Checkout}/>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}